function [wp, gamma, gammadot, r, z] = HelixWaypoint(t, wp_time, gammao, wo, wdot, yawo, ro, rdot, zo, zdot)
% function waypoint = HelixWaypoint(helix_t, wp_time, initial_angle, initial_angle_vel, angle_acc, initial_yaw, initial_radius, radius_dot, initial_z, zdot)

wp = NanWaypoint(wp_time, 4);

gamma = gammao + wo * t + 1/2 * wdot * t^2;
gammadot = wo + wdot * t;
gammadotdot = wdot;

% I think these are wrong
% yaw = yawo - (wo * t + 1/2 * wdot * t^2);
% yaw_dot = - (wo + wdot * t);
% yaw_ddot = - wdot;
%

yaw = yawo + gamma;
yawdot = gammadot;
yawdotdot = gammadotdot;

z = zo + zdot * t;
r = ro + rdot * t;

wp.pos = [...
    r * cos(gamma); ...
    r * sin(gamma); ...
    z; ...
    yaw];

wp.vel = [...
    cos(gamma)*(rdot)-r*sin(gamma)*(gammadot); ...
    sin(gamma)*(rdot)+cos(gamma)*r*(gammadot); ...
    zdot; ...
    yawdot];

wp.acc = [...
    -2*sin(gamma)*(rdot)*(gammadot)-r*(cos(gamma)*(gammadot).^2+sin(gamma)*(gammadotdot)); ...
    -r*sin(gamma)*(gammadot).^2+cos(gamma)*(2*(rdot)*(gammadot)+r*(gammadotdot)); ...
    0;
    yawdotdot];

wp.jerk = [...
    -3*cos(gamma)*(gammadot)*((rdot)*(gammadot)+r*(gammadotdot))+sin(gamma)*(r*(gammadot).^3-3*(rdot)*(gammadotdot)); ...
    -3*sin(gamma)*(gammadot)*((rdot)*(gammadot)+r*(gammadotdot))+cos(gamma)*(-r*(gammadot).^3+3*(rdot)*(gammadotdot)); ...
    0;
    nan];

wp.snap = [...
    4*(rdot)*(gammadot)*(sin(gamma)*(gammadot).^2-3*cos(gamma)*(gammadotdot))+r*(6*sin(gamma)*(gammadot).^2*(gammadotdot)+cos(gamma)*((gammadot).^4-3*(gammadotdot).^2)); ...
    -4*(rdot)*(gammadot)*(cos(gamma)*(gammadot).^2+3*sin(gamma)*(gammadotdot))+r*(-6*cos(gamma)*(gammadot).^2*(gammadotdot)+sin(gamma)*((gammadot).^4-3*(gammadotdot).^2)); ...
    0;
    nan];
    
end